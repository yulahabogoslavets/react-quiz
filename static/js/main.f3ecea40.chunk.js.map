{"version":3,"sources":["components/UI/Button/Button.module.css","containers/QuizCreator/FormQuestion.module.css","components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Loyout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuiList.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Loyout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswersItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","containers/Auth/Auth.js","containers/QuizCreator/FormQuestion.jsx","containers/QuizCreator/Confirm.jsx","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","style","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","console","log","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","QuizWrapper","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","target","control","validateControl","forEach","name","isValid","trim","test","String","toLowerCase","onSubmit","AuthForm","renderInputs","FormQuestion","continue","e","nextStep","QuizCreator","placeholder","handleChange","defaultValue","values","answer1","answer2","answer3","Confirm","back","prevStep","createQuizHandler","step","answer4","input","QuizList","renderQuizes","App","path","component","Boolean","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3ecea40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2I0yy\",\"error\":\"Button_error__3RZNO\",\"success\":\"Button_success__F5iBc\",\"primary\":\"Button_primary__29gkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"FormQuestion_QuizCreator__1xd4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3iWGn\",\"close\":\"Drawer_close__1TgQ8\",\"active\":\"Drawer_active__3ScP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3Ddbs\",\"open\":\"MenuToggle_open__1_Jn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2wfaV\",\"QuizWrapper\":\"Quiz_QuizWrapper__1Ao1s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__XSn34\",\"Question\":\"ActiveQuiz_Question__1G4uV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3nUam\",\"success\":\"AnswerItem_success__34M9y\",\"error\":\"AnswerItem_error__2EwZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__35Lr-\",\"success\":\"FinishedQuiz_success__2A2aY\",\"error\":\"FinishedQuiz_error__1FGr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3jNCn\",\"AuthForm\":\"Auth_AuthForm__1Q60d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input___Ma4P\",\"invalid\":\"Input_invalid__18i8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2q2u1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2e0Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1Get9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1NbFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuiList_QuizList__m29y5\"};","import React from 'react';\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls=[\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else{\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n};\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n\r\nexport default Backdrop;","import React, {Component} from 'react';\r\nimport classes from './Drawer.module.css';\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst links = [\r\n    {to:'/', label:'List', exact: true},\r\n    {to:'/auth', label:'Auth', exact: false},\r\n    {to:'/quiz-creator', label:'Creat test', exact: false}\r\n];\r\n\r\nclass Drawer extends Component {\r\n\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    };\r\n\r\n    renderLinks(){\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        const cls = [classes.Drawer];\r\n\r\n        if(!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n                { this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null }\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport style from './Layout.module.css';\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    state={\r\n        menu: false\r\n    };\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    };\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className={style.Layout}>\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                />\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n                <main>\r\n                    { this.props.children }\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport style from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [style.AnswerItem];\r\n\r\n    if(props.state) {\r\n        cls.push(style[props.state])\r\n    }\r\n\r\n    return(\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport style from './AnswersList.module.css';\r\nimport AnswerItem from \"./AnswerItem/AnswersItem\";\r\n\r\nconst AnswersList=(props) => {\r\n    return (\r\n        <ul className={style.AnswersList}>\r\n            {props.answers.map((answer, index) => {\r\n                return (\r\n                    <AnswerItem\r\n                        key={index}\r\n                        answer={answer}\r\n                        onAnswerClick={props.onAnswerClick}\r\n                        state={props.state ? props.state[answer.id] : null}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList;\r\n\r\n","import React from 'react';\r\nimport style from './ActiveQuiz.module.css';\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz=(props) =>{\r\n    return(\r\n    <div className={style.ActiveQuiz}>\r\n        <p className={style.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n\r\n            <small>{props.answerNumber} von {props.quizLength}</small>\r\n        </p>\r\n\r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n        />\r\n    </div>\r\n)};\r\n\r\nexport default ActiveQuiz;\r\n\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ];\r\n\r\n    return(\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport style from './FinishedQuiz.module.css';\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) =>{\r\n        if(props.results[key] === 'success') {\r\n            total ++\r\n        }\r\n        return total\r\n    }, 0);\r\n\r\n    return(\r\n        <div className={style.FinishedQuiz}>\r\n            <ul>\r\n               { props.quiz.map((quizItem, index) => {\r\n                   const cls = [\r\n                       'fa',\r\n                       props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                       style[props.results[quizItem.id]]\r\n                   ];\r\n\r\n                   return (\r\n                       <li key={index}>\r\n                           <strong>{index + 1}</strong>. &nbsp;\r\n                           {quizItem.question}\r\n                           <i className={cls.join(' ')}/>\r\n\r\n                       </li>\r\n                   )\r\n               })}\r\n            </ul>\r\n            <p>Richtig {successCount} von {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Repeat</Button>\r\n                <Link to=\"/\">\r\n                    <Button type=\"success\">List mit dem Test</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FinishedQuiz;","import React, {Component} from 'react';\r\nimport style from './Quiz.module.css';\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\n\r\n\r\nclass Quiz extends Component {\r\n    state={\r\n        results: {},\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        quiz:[\r\n            {\r\n                question: 'Welche Farbe hat der Himmel?',\r\n                rightAnswerId: 2,\r\n                id: 1,\r\n                answers: [\r\n                    {text: 'schwarz', id:1},\r\n                    {text: 'blau', id:2},\r\n                    {text: 'rot', id:3},\r\n                    {text: 'grün', id:4}\r\n                ]\r\n            },\r\n            {\r\n                question: 'Wie viel month im Year?',\r\n                rightAnswerId: 3,\r\n                id: 2,\r\n                answers: [\r\n                    {text: '13', id:1},\r\n                    {text: '7', id:2},\r\n                    {text: '12', id:3},\r\n                    {text: '9', id:4}\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n\r\n    onAnswerClickHandler = (answerId) => {\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0];\r\n            if(this.state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        console.log('Answer Id:', answerId);\r\n\r\n        const question = this.state.quiz[this.state.activeQuestion];\r\n        const results = this.state.results;\r\n\r\n        if(question.rightAnswerId === answerId) {\r\n            if(!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n\r\n            this.setState({\r\n                answerState: {[answerId]: 'success'},\r\n                results: results\r\n            });\r\n\r\n            const timeout = window.setTimeout(() =>{\r\n                if(this.isQuizFinished()){\r\n                    //console.log('finished')\r\n                    this.setState({\r\n                        isFinished: true\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null\r\n                    })\r\n                }\r\n\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n        } else {\r\n            results[question.id] = 'error';\r\n            this.setState({\r\n                answerState: {[answerId]: 'error'},\r\n                results: results\r\n            })\r\n        }\r\n    };\r\n\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === this.state.quiz.length;\r\n    }\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n            isFinished: false,\r\n            results: {}\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className={style.Quiz}>\r\n                <div className={style.QuizWrapper}>\r\n                    <h1>Quiz</h1>\r\n                    {\r\n                        this.state.isFinished\r\n                        ? <FinishedQuiz\r\n                            results={this.state.results}\r\n                            quiz={this.state.quiz}\r\n                            onRetry={this.retryHandler}\r\n                            />\r\n                            :<ActiveQuiz\r\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                                question={this.state.quiz[this.state.activeQuestion].question}\r\n                                onAnswerClick={this.onAnswerClickHandler}\r\n                                quizLength={this.state.quiz.length}\r\n                                answerNumber={this.state.activeQuestion + 1}\r\n                                state={this.state.answerState}\r\n                            />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from \"react\";\r\nimport classes from './Input.module.css';\r\n\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}){\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text';\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType} - ${Math.random()}`;\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                isInvalid(props)\r\n                    ? <span>{props.errorMessage || 'enter richtige value'}</span>\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Input;","import React, {Component} from 'react';\r\nimport classes from './Auth.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\n\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component{\r\n\r\n    state={\r\n        isFormValid: false,\r\n        formControls: {\r\n          email: {\r\n              value: '',\r\n              type: 'email',\r\n              errorMessage: 'Enter correct Email',\r\n              valid: false,\r\n              touched: false,\r\n              validation: {\r\n                  required: true,\r\n                  email: true\r\n              }\r\n          },\r\n          password: {\r\n              value: '',\r\n              type: 'password',\r\n              label: 'Password',\r\n              errorMessage: 'Enter correct password',\r\n              valid: false,\r\n              touched: false,\r\n              validation: {\r\n                  required: true,\r\n                  minLength: 6\r\n              }\r\n          }\r\n      }\r\n    };\r\n\r\n    loginHandler = () => {\r\n\r\n    };\r\n\r\n    registerHandler = () => {\r\n\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    validateControl (value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n        let isValid = true;\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (validation.email){\r\n            isValid = validateEmail(value) && isValid\r\n        }\r\n        if (validation.minLength){\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        console.log(`${controlName}: `, event.target.value);\r\n\r\n        const formControls = { ...this.state.formControls };\r\n        const control = { ...formControls[controlName]};\r\n\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        });\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    };\r\n\r\n    renderInputs(){\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return(\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Authorized</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                        { this.renderInputs()}\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Eintreten\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Registieren\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth;","import React, {Component} from \"react\";\r\nimport style from './FormQuestion.module.css';\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"../../components/UI/Button/Button.module.css\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\n\r\nclass FormQuestion extends Component{\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className={style.QuizCreator}>\r\n                <div>\r\n                     <h1>Create test</h1>\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='question'\r\n                    onChange={this.props.handleChange('question')}\r\n                    defaultValue={this.props.values.question}\r\n                />\r\n                <br/>\r\n                <input\r\n                    type='text'\r\n                    placeholder='answer1'\r\n                    onChange={this.props.handleChange('answer1')}\r\n                    defaultValue={this.props.values.answer1}\r\n                />\r\n                <br/>\r\n                <input\r\n                    type='text'\r\n                    placeholder='answer2'\r\n                    onChange={this.props.handleChange('answer2')}\r\n                    defaultValue={this.props.values.answer2}\r\n                />\r\n                <br/>\r\n                <input\r\n                        type='text'\r\n                        placeholder='answer3'\r\n                        onChange={this.props.handleChange('answer3')}\r\n                        defaultValue={this.props.values.answer3}\r\n                />\r\n                <br/>\r\n\r\n                <Button\r\n                    onClick={this.continue}\r\n                     type=\"primary\"\r\n                >\r\n                   Create test\r\n                </Button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FormQuestion;","import React, {Component} from \"react\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport style from \"./FormQuestion.module.css\";\r\n\r\nclass Confirm extends Component {\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    };\r\n    createQuizHandler = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        const {values: {question, answer1, answer2, answer3}} = this.props;\r\n        return (\r\n            <div className={style.QuizCreator}>\r\n                <div>\r\n                <ul>\r\n                    <li>\r\n                        Question: <span>{question}</span>\r\n                    </li>\r\n                    <li>\r\n                        Answer 1: <span>{answer1}</span>\r\n                    </li>\r\n                    <li>\r\n                        Answer 2: <span>{answer2}</span>\r\n                    </li>\r\n                    <li>\r\n                        Answer 3: <span>{answer3}</span>\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n                <Button\r\n                    onClick={this.back}\r\n                    type=\"primary\"\r\n                >\r\n                    back\r\n                </Button>\r\n                    <Button\r\n                        onClick={this.createQuizHandler}\r\n                        type=\"success\"\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </div>\r\n\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Confirm;","import React, {Component} from \"react\";\r\nimport FormQuestion from \"./FormQuestion\";\r\nimport Confirm from \"./Confirm\";\r\n\r\nclass QuizCreator extends Component {\r\n    state = {\r\n        step: 1,\r\n        question: '',\r\n        answer1: '',\r\n        answer2: '',\r\n        answer3: '',\r\n        answer4: ''\r\n    };\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    };\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    };\r\n\r\n    handleChange = input => e => {\r\n        this.setState({\r\n            [input]: e.target.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {question, answer1, answer2, answer3} = this.state;\r\n        const values = {question, answer1, answer2, answer3};\r\n\r\n\r\n        switch(step) {\r\n            case 1:\r\n                return (\r\n                    <FormQuestion\r\n                        nextStep={this.nextStep}\r\n                        handleChange={this.handleChange}\r\n                        values={values}\r\n                    />\r\n                );\r\n\r\n                case 2:\r\n                return (\r\n                <Confirm\r\n                prevStep={this.prevStep}\r\n                values={values}\r\n                />\r\n\r\n                );\r\n\r\n                default: return <h1>form</h1>;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n}\r\n\r\nexport default QuizCreator;","import React, {Component} from \"react\";\r\nimport classes from './QuiList.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes() {\r\n        return [1,2,3].map((quiz, index) => {\r\n            return(\r\n                <li key={index}>\r\n                    <NavLink to={'/quiz/' + quiz}>\r\n                             Test {quiz}\r\n                    </NavLink>\r\n\r\n                </li>\r\n\r\n            )\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>List of the question</h1>\r\n                    <ul>\r\n                        { this.renderQuizes() }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuizList;","import React, {Component} from 'react';\nimport Layout from \"./hoc/Loyout/Layout\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\n\nclass App extends Component {\n  render(){\n    return(\n        <HashRouter>\n        <Layout>\n            <Switch>\n                <Route path=\"/auth\" component={Auth} />\n                <Route path=\"/quiz-creator\" component={QuizCreator} />\n                <Route path=\"/quiz/:id\" component={Quiz} />\n                <Route exact path=\"/\" component={QuizList} />\n            </Switch>\n        </Layout>\n        </HashRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}